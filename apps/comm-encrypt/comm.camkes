import <std_connector.camkes>;
import <global-connectors.camkes>;

import "components/Pixhawk_RX/Pixhawk_RX.camkes";
import "components/Pixhawk_TX/Pixhawk_TX.camkes";
import "components/Telemetry_RX/Telemetry_RX.camkes";
import "components/Telemetry_TX/Telemetry_TX.camkes";
import "components/Decrypt/Decrypt.camkes";

assembly {
    composition {
        component Pixhawk_RX pixhawk_rx;
        component Pixhawk_TX pixhawk_tx;
        component Telemetry_RX telem_rx;
        component Telemetry_TX telem_tx;
        component Decrypt decrypt;

        connection seL4SharedData dataport_pixhawk_to_telem (from pixhawk_rx.ring_buffer,   to telem_tx.ring_buffer);
        connection seL4SharedData dataport_telem_to_decrypt (from telem_rx.ring_buffer,     to decrypt.ring_buffer);

        connection seL4SharedData dataport_decrypt_to_pixhawk (from decrypt.to_pixhawk, to pixhawk_tx.from_decrypt);
        connection seL4Notification event_decrypt_to_pixhawk  (from decrypt.data_ready, to pixhawk_tx.data_ready);
        connection seL4Notification event_pixhawk_to_decrypt  (from pixhawk_tx.data_ack, to decrypt.data_ack);
    }

    configuration {
        pixhawk_rx.affinity = 0;
        pixhawk_tx.affinity = 1;
        telem_rx.affinity   = 2;
        telem_tx.affinity   = 1;
        decrypt.affinity    = 1;

        pixhawk_rx.priority = 255;
        pixhawk_tx.priority = 255;
        telem_rx.priority   = 255;
        telem_tx.priority   = 255;
        decrypt.priority    = 255;

        pixhawk_rx.ring_buffer_access   = "RW";
        telem_rx.ring_buffer_access     = "RW";
        telem_tx.ring_buffer_access     = "RW";
        decrypt.ring_buffer_access      = "RW";
    }
}
