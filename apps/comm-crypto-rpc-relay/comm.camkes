import <std_connector.camkes>;
import <global-connectors.camkes>;

import "components/Pixhawk/Pixhawk.camkes";
import "components/Telemetry/Telemetry.camkes";
import "components/Decrypt/Decrypt.camkes";
import "components/Encrypt/Encrypt.camkes";

#define HIGHEST_PRIORITY 255

assembly {
    composition {
        component Pixhawk   pixhawk;
        component Telemetry telemetry;
        component Decrypt   decrypt;
        component Encrypt   encrypt;


        connection seL4SharedData   dataport_pixhawk_to_encrypt         (from pixhawk.ring_buffer,      to encrypt.ring_buffer);
        connection seL4SharedData   dataport_telem_to_decrypt           (from telemetry.ring_buffer,    to decrypt.ring_buffer);

        // Encrypt => Telemetry TX
        connection seL4RPCCall      rpccall_encrypt_to_telemetry        (from encrypt.serial,           to telemetry.serial);
        connection seL4SharedData   dataport_encrypt_to_telemetry       (from encrypt.port,             to telemetry.port);

        // Decrypt => Pixhawk TX
        connection seL4RPCCall      rpccall_decrypt_to_pixhawk          (from decrypt.serial,           to pixhawk.serial);
        connection seL4SharedData   dataport_decrypt_to_pixhawk         (from decrypt.port,             to pixhawk.port);
    }

    configuration {
        pixhawk.affinity    = 0;
        telemetry.affinity  = 1;
        decrypt.affinity    = 2;
        encrypt.affinity    = 2;

        pixhawk.priority    = HIGHEST_PRIORITY;
        telemetry.priority  = HIGHEST_PRIORITY;
        decrypt.priority    = HIGHEST_PRIORITY;
        encrypt.priority    = HIGHEST_PRIORITY;

        pixhawk.ring_buffer_access      = "W";
        telemetry.ring_buffer_access    = "W";
        decrypt.ring_buffer_access      = "R";
        encrypt.ring_buffer_access      = "R";

        rpccall_encrypt_to_telemetry.buffer     = "dataport_encrypt_to_telemetry";
        rpccall_decrypt_to_pixhawk.buffer       = "dataport_decrypt_to_pixhawk";
    }
}
