import <std_connector.camkes>;
import <global-connectors.camkes>;

import "components/Pixhawk_RX/Pixhawk_RX.camkes";
import "components/Telemetry_RX/Telemetry_RX.camkes";
import "components/Decrypt/Decrypt.camkes";
import "components/Encrypt/Encrypt.camkes";
import "components/Pixhawk_TX/Pixhawk_TX.camkes";
import "components/Telemetry_TX/Telemetry_TX.camkes";

#define HIGHEST_PRIORITY 255

assembly {
    composition {
        component Pixhawk_RX pixhawk_rx;
        component Telemetry_RX telem_rx;
        component Decrypt decrypt;
        component Encrypt encrypt;
        component Pixhawk_TX pixhawk_tx;
        component Telemetry_TX telemetry_tx;


        connection seL4SharedData   dataport_pixhawk_to_encrypt         (from pixhawk_rx.ring_buffer,   to encrypt.ring_buffer);
        connection seL4SharedData   dataport_telem_to_decrypt           (from telem_rx.ring_buffer,     to decrypt.ring_buffer);

        // Encrypt => Telemetry TX
        connection seL4RPCCall      rpccall_encrypt_to_telemetry_tx     (from encrypt.serial,           to telemetry_tx.serial);
        connection seL4SharedData   dataport_encrypt_to_telemetry_tx    (from encrypt.port,             to telemetry_tx.port);

        // Decrypt => Pixhawk TX
        connection seL4RPCCall      rpccall_decrypt_to_pixhawk_tx       (from decrypt.serial,           to pixhawk_tx.serial);
        connection seL4SharedData   dataport_decrypt_to_pixhawk_tx      (from decrypt.port,             to pixhawk_tx.port);
    }

    configuration {
        pixhawk_rx.affinity = 0;
        telem_rx.affinity   = 1;
        decrypt.affinity    = 2;
        encrypt.affinity    = 2;
        telemetry_tx.affinity = 2;
        pixhawk_tx.affinity = 2;

        pixhawk_rx.priority = HIGHEST_PRIORITY;
        telem_rx.priority   = HIGHEST_PRIORITY;
        decrypt.priority    = HIGHEST_PRIORITY;
        encrypt.priority    = HIGHEST_PRIORITY;
        telemetry_tx.priority = HIGHEST_PRIORITY;
        pixhawk_tx.priority = HIGHEST_PRIORITY;

        pixhawk_rx.ring_buffer_access   = "W";
        telem_rx.ring_buffer_access     = "W";
        decrypt.ring_buffer_access      = "R";
        encrypt.ring_buffer_access      = "R";

        rpccall_encrypt_to_telemetry_tx.buffer = "dataport_encrypt_to_telemetry_tx";
        rpccall_decrypt_to_pixhawk_tx.buffer = "dataport_decrypt_to_pixhawk_tx";
    }
}
